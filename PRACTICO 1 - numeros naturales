#include "stdafx.h"
#include "conio.h"
#include "math.h"
#include <iostream>
#include <stdlib.h> 
#include <time.h>

using namespace std;

int contarDigitos(int Num);
int unirNumMayorAlMenor(int Num1, int Num2);
int digRepetido(int Num);
int eliminarDig(int Num, int dig);
void eliminarRepetidos();
int eliminarDigMayor(int Num);
int numOrdenado(int Num);
int insertarNumLugarCorresp(int Num);
int invertirNum(int Num);
void verificarCapicua(int Num1);
void cargarPlanilla(int n, int vec[]);
void mostrarPlanilla(int n, int vec[]);
void juegoADIVINAR(int Num);
int crapulo(int Num);
int automorfico(int Num1);
void mostrarAutomorfico();


int main(){
	int opcion, Num1, Num2, r, vec[50];
		do{
		system("cls");
		cout<<"---------- M E N U ----------";
		cout<<endl<<"1.- Concatenar un numero mayor al numero menor";
		cout<<endl<<"2.- Depurar los digitos repetidos de un numero";
		cout<<endl<<"3.- Invertir un numero";
		cout<<endl<<"4.- Eliminar el digito mayor de un numero";
		cout<<endl<<"5.- Insertar un digito en el lugar que le corresponde";
		cout<<endl<<"6.- Verificar si el numero es capicua";
		cout<<endl<<"7.- Planilla de cancelacion";
		cout<<endl<<"8.- Juego de ADIVINAR";
		cout<<endl<<"9.- Obtener crapulo de un numero";
		cout<<endl<<"10.- Mostrar los numeros automorficos menores que 1000";
		cout<<endl<<"0.- Salir";
		cout<<endl<<"Seleccionar opcion: ";
		cin >> opcion;
		switch(opcion){
			case 1: do{
					cout<< "Introducir primer numero natural: ";
					cin >> Num1;
					}while(Num1<0);
					do{
					cout<< "Introducir segundo numero natural: ";
					cin >> Num2;
					}while(Num2<0);
					r=unirNumMayorAlMenor(Num1, Num2);
					cout<< r;
					getch();
					break;
			case 2: eliminarRepetidos();
					getch();
					break;
			case 3: do{
					cout<< "Introducir un numero natural: ";
					cin >> Num1;
					}while(Num1<0);
					r=invertirNum(Num1);
					cout<< r;
					getch();
					break;
			case 4: do{
					cout<< "Introducir un numero natural: ";
					cin >> Num1;
					}while(Num1<0);
					r=eliminarDigMayor(Num1);
					cout<< r;
					getch();
					break;
			case 5: do{
					cout<< "Introducir un numero ordenado natural: ";
					cin >> Num1;
					}while(Num1<0);
					r=insertarNumLugarCorresp(Num1);
					cout<< r;
					getch();
					break;
			case 6: do{
					cout<< "Introducir un numero natural: ";
					cin >> Num1;
					}while(Num1<0);
					verificarCapicua(Num1);
					getch();
					break;
			case 7: do{
					cout<<"Ingrese numero de obreros: ";
					cin>>Num1;
					}while(Num1<0);
					cargarPlanilla(Num1, vec);
					mostrarPlanilla(Num1, vec);
					getch();
					break;
			case 8: do{
					cout<< "Introducir un numero natural: ";
					cin >> Num1;
					}while(Num1<0);
					juegoADIVINAR(Num1);
					getch();
					break;
			case 9: do{
					cout<< "Introducir un numero natural: ";
					cin >> Num1;
					}while(Num1<0);
					r=crapulo(Num1);
					cout<< r;
				getch();
					break;
			case 10:mostrarAutomorfico();
					getch();
					break;
		}
	}while(opcion !=0);


	getch();
	return(1);
}


int contarDigitos(int Num){
	int d=0;
		while(Num>0){
		Num=Num/10;
		d++;
		}
	return(d);
}	

int unirNumMayorAlMenor(int Num1, int Num2){
	int d, r;
		if(Num1<Num2){
		d=contarDigitos(Num2);
		r=(Num1*powf(10,d))+Num2;
		}
		else{
		d=contarDigitos(Num1);
		r=(Num2*powf(10,d))+Num1;
		}
		return(r);
}

int digRepetido(int Num){
	int s, aux, d1, d2, c;
	aux=Num;
	while(Num>0){
		d1=Num%10;
		c=0;
		s=aux;
		while(s>0){
			d2=s%10;
			if(d2==d1){
				c++;
			}
			s=s/10;
		}
		if(c>1){
			return(d1);
		}
		Num=Num/10;
	}
	return(-1);
}

int eliminarDig(int Num, int dig){
	int x,s=0,m=1;
		while(Num>0){
			x=Num%10;
			if(x!=dig){
				s=s+(x*m);
				m=m*10;
			}
			Num=Num/10;
		}
		return(s);
}


void eliminarRepetidos(){
	int Num,d;
		do{
		cout<<"Ingrese un numero: ";
		cin>>Num;
		}while(Num<0);
		d=digRepetido(Num);
		while(d!=(-1)){
			Num=eliminarDig(Num,d);
			d=digRepetido(Num);
		}
		cout<<Num;
}


int eliminarDigMayor(int Num){
	int Mayor=0,d,NuevoNum=0,c=0,Num1;
		Num1=Num;
		while(Num>0){
			d=Num%10;
			Num=Num/10;
			if(d>Mayor){
			Mayor=d;
			}
		}
		while(Num1>0){
			d=Num1%10;
			Num1=Num1/10;
			if(d!=Mayor){
				NuevoNum=NuevoNum+(d*powf(10,c));
				c++;
			}
		}
	return(NuevoNum);
}

int numOrdenado(int Num){
	int menor=10, band=0,d;
		while(Num>0)
{
			d=Num%10;
			Num=Num/10;
			if(menor>d)
{
				menor=d;
			}
			else{
			band=1;
			}
		}
		return(band);
}

int insertarNumLugarCorresp(int Num){
	int band,dig,NuevoNum=0,c=0,d1,d2,bande=0;
		band=numOrdenado(Num);
		while(band==1){
		cout<<"Ingrese otro numero (ORDENADO): ";
		cin>>Num;
		band=numOrdenado(Num);
		}
		cout<<"Ingrese un digito: ";
		cin>>dig;

		while(Num>0){
			d1=Num%10;
			Num=Num/10;
			if(dig>d1 && bande==0){
				NuevoNum=NuevoNum + (dig*powf(10,c));
				c++;
				NuevoNum=NuevoNum + (d1*powf(10,c));
				c++;
				bande=1;
			}
			else{
				NuevoNum=NuevoNum + (d1*powf(10,c));
				c++;
			}

		}
		if(bande==0){
			NuevoNum=NuevoNum + (dig*powf(10,c));
		}
		return(NuevoNum);
	}

int invertirNum(int Num){
	int inv=0;
		while (Num != 0){
			inv = inv * 10;
			inv = inv + Num % 10;
			Num = Num / 10;
	}
	return(inv);
}

void verificarCapicua(int Num1){
	int Num2;
		Num2=invertirNum(Num1);
		if(Num1==Num2){
		cout<<"El numero es capicua.";
		}
		else{
		cout<<"El numero NO es capicua.";
		}
}

void cargarPlanilla(int n, int vec[]){
	int i,nro;
	for(i=0; i<n; i++){
		cout<<"Ingrese horas trabajadas para el obrero "<<i+1<<": ";
		cin>>nro;
		vec[i]=nro;
	}
}

void mostrarPlanilla(int n, int vec[]){
	int i;
	for(i=0; i<n; i++){
		vec[i]=vec[i]*20;
		cout<<endl<<"Se debe cancelar Bs. "<<vec[i]<<" al obrero "<<i+1;
	}
}

void juegoADIVINAR(int Num)	{
	int aleatorio;
		srand(time(NULL));
		aleatorio=1+rand()%(101-1);
		
		while(Num!=aleatorio){
			if(Num>aleatorio){
			cout<<"Demasiado grande";	
			}
			else{
			cout<<"Demasiado chico";
			}
			cout<<endl<<"Ingrese otro numero: ";
			cin>>Num;
		}
		cout<<"Correcto!";
}

int crapulo(int Num){
	int band=1,crpl,d;
		while(band==1){
			crpl=0;
			while(Num>0){
			d=Num%10;
			crpl=crpl+d;
			Num=Num/10;
			}
			if(crpl<10){
			band=0;
			}
			Num=crpl;
		}	
	return(crpl);
}

int automorfico(int Num1){
	int r,Num2,d1,d2,band=0;
		r=Num1;
		Num2=Num1*Num1;
		d1=contarDigitos(Num1);
		while(Num1>0 && band==0){
			d1=Num1%10;
			Num1=Num1/10;
			d2=Num2%10;
			Num2=Num2/10;
			if(d1!=d2){
			band=1;
			}
		}
		if(band==0){
		return(1);
		}
		else{
		return(-1);
		}
}

void mostrarAutomorfico(){ 
	int c=0,r;

	while(c<1001){
	r=automorfico(c);
		if(r==1){
			cout<<c<<endl;
		}
	c++;
	}
}






